// Динамическая типизация

function wrongQuacker(duck: any) {
  duck.quack();
}

wrongQuacker({
  quack: function () {
    console.log("quack");
  },
});

wrongQuacker(42);

// Статическая типизация

type Duck = {
  quack(): void;
};

function quacker(duck: Duck) {
  duck.quack();
}

quacker({
  quack: function () {
    console.log("quack");
  },
});
quacker(42);

// Слабая типизация

const a: any = "hello world";
const b: any = 42;

console.log(a == b);
console.log("42" == b);
console.log("42" === b);

// Сильная типизация

const a: string = "hello world";
const b: number = 42;

console.log(a == b);
console.log("42" == b);
console.log("42" === b);

// Вывод типа

function add(x: number, y: number) {
  return x + y;
}

let sum = add(40, 2);

// Резюме
//  Тип — классификация данных по возможным операциям над ними, их смыслу
// и набору допустимых значений.
//  Система типов — набор правил назначения типов элементам языка программирования.
//  Тип ограничивает диапазон принимаемых переменной значений, так что в некоторых случаях ошибка времени выполнения превращается в ошибку компиляции.
//  Неизменяемость — свойство данных, возможное благодаря типизации и гарантирующее, что переменная не поменяется, когда не должна.
//  Видимость — еще одно свойство уровня типа, определяющее, к каким данным
// есть доступ у тех или иных компонентов.
//  Обобщенное программирование предоставляет широкие возможности расцепления и повторного использования кода.
//  Указание нотаций типов упрощает понимание кода.
//  Динамическая («утиная») типизация — определение типа на этапе выполнения.
//  При статической типизации типы проверяются во время компиляции и перехватываются ошибки, которые в противном случае могли бы возникнуть во время
// выполнения.
//  Строгость системы типов определяется числом допустимых неявных преобразований типов.
//  Современные модули проверки типов включают обладающие широкими возможностями алгоритмы вывода, которые позволяют определять типы переменных,
//     функций и т. д. без явного их указания в коде
